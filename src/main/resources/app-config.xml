<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean name="greetingService"
          class="com.codehub.spring.core.services.GreetingServiceImpl"/>

    <!--Setter Injection-->
    <!-- property name="Name of the propert in the class, Spring will find the correct Setter for it" -->
    <!-- ref="name of the bean as declared in this xml"-->
    <bean name="setterInjectedController"
          class="com.codehub.spring.core.controllers.SetterInjectedController">
    <property name="greetingService" ref="greetingService"/>
    </bean>

    <!--Constructor Injection-->
    <!--constructor-arg index="the indexed position of the constructor arguments to be injected"-->
    <!-- ref="name of the bean as declared in this xml"-->
    <bean name="constructorInjectedController"
          class="com.codehub.spring.core.controllers.ConstructorInjectedController">
    <constructor-arg index="0" ref="greetingService"/>
    </bean>


    <!--Autowire: autowire="byName, byType" It needs a setter-->
    <bean name="autowiredInjectedController"
          class="com.codehub.spring.core.controllers.AutowiredInjectedController" autowire="byName">
    </bean>


    <!--Autowire: autowire="constructor" It needs a constructor to use-->
    <!--<bean name="autowiredInjectedController"-->
                 <!--class="com.codehub.spring.core.controllers.AutowiredInjectedController"-->
                 <!--autowire="constructor">-->
        <!--<constructor-arg index="0" ref="greetingService"/>-->
    <!--</bean>-->
    <!--Arguments and ref on constructor are not needed, it autowires them from the available beans	-->

</beans>

<!--
        ABOUT AUTOWIRE

        Controls whether bean properties are "autowired".
        This is an automagical process in which bean references don't need
        to be coded explicitly in the XML bean definition file, but rather the
        Spring container works out dependencies. The effective default is "no".

        There are 4 modes:

        1. "no"
        The traditional Spring default. No automagical wiring. Bean references
        must be defined in the XML file via the <ref/> element (or "ref"
        attribute). We recommend this in most cases as it makes documentation
        more explicit.

        Note that this default mode also allows for annotation-driven autowiring,
        if activated. "no" refers to externally driven autowiring only, not
        affecting any autowiring demands that the bean class itself expresses.

        2. "byName"
        Autowiring by property name. If a bean of class Cat exposes a "dog"
        property, Spring will try to set this to the value of the bean "dog"
        in the current container. If there is no matching bean by name, nothing
        special happens.

        3. "byType"
        Autowiring if there is exactly one bean of the property type in the
        container. If there is more than one, a fatal error is raised, and
        you cannot use byType autowiring for that bean. If there is none,
        nothing special happens.

        4. "constructor"
        Analogous to "byType" for constructor arguments. If there is not exactly
        one bean of the constructor argument type in the bean factory, a fatal
        error is raised.
-->